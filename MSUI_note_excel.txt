？ 筛选字段功能；

1. 点击出现字段；
-- 不能删除原先的字段，要拼接新的查询条件；

var cols = [];
var html = '';
for(var i=1; i<=xx.COLCOUNT; i++){
	var x = getColIndex(i);
	cols.push(params.cellData[x + this.options.theadLv]);
	html += '<li>'+ params.cellData[x + this.options.theadLv] +'</li>';
}
xx.append(html);



2. "确定"
$('#filterBtn').click(function(){
	var newCellData = {};
	var newMetaOutputObj = {};
	$.each('li',function(i){
		if(this.siblings().attr('check')){
			var x = fromColIndex(i);
			newCellData[x + this.options.theadLv] = params.cellData[x + this.options.theadLv];
			newMetaOutputObj[x] = metaOutputObj[x];
		}
	});
	defindObj.cellData = newCellData;
	$('#excel').excel(defineObj);
	
	metaOutputObj = newMetaOutputObj;
	fillData();
});


？ 关键是 inputBody...
-- 之前是...


两个选择：一个是重写存储过程，一个是在当前报表内隐藏某些字段；

-- 要先了解怎么产生的字段？？


方法2：
-- 好像可以通过修改 params.cellData 来修改表格；


-- 接下来就是修改 inputBody -> metaOutputObj['A']


defined in form: {"metaTitle":[{"COLCOUNT":"8","FREEZEXY":"","ID":"9","DEFINE":"{\"colCnt\":\"8\",\"rowCnt\":5,\"mode\":\"Design\",\"freezeXY\":\"\",\"hideXYTag\":false,\"colWidth\":{\"A\":120,\"B\":120,\"C\":120,\"D\":120,\"E\":120,\"F\":120,\"G\":120,\"H\":120},\"rowHeight\":{\"2\":18},\"colDefaultWidth\":120,\"cellSpan\":{\"A2\":[\"B2\"],\"C1\":[\"D1\"],\"E1\":[\"F1\",\"E2\",\"F2\"]},\"cellData\":{\"A1\":\"BRN_NBR\",\"B1\":\"是打发士大夫\",\"C1\":\"BRN_TYP\",\"D1\":\"DPT_TYP\",\"E1\":\"UPP_BRN\",\"F1\":\"BRN_NAM\",\"G1\":\"STR_DTE\",\"H1\":\"UPD_TIM\",\"B2\":\"\",\"A2\":\"yutuytutyuty\",\"C2\":\"是打发士大夫\",\"D2\":\"\",\"G2\":\"是打发士大夫\",\"H2\":\"是打发士大夫\"},\"cellExpr\":{},\"cellFormat\":{},\"cellDeaultFormat\":[],\"noSystemTool\":false}","ROWCOUNT":"2"}],"metaOutput":[{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"A","NAME":"BRN_NBR","CONTROLATTR":"","ID":"9"},{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"B","NAME":"BRN_LVL","CONTROLATTR":"","ID":"9"},{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"C","NAME":"BRN_TYP","CONTROLATTR":"","ID":"9"},{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"D","NAME":"DPT_TYP","CONTROLATTR":"","ID":"9"},{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"E","NAME":"UPP_BRN","CONTROLATTR":"","ID":"9"},{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"F","NAME":"BRN_NAM","CONTROLATTR":"","ID":"9"},{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"G","NAME":"STR_DTE","CONTROLATTR":"","ID":"9"},{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"H","NAME":"UPD_TIM","CONTROLATTR":"","ID":"9"}],"metaOutputObj":{"A":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"A","NAME":"BRN_NBR","CONTROLATTR":"","ID":"9"},"B":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"B","NAME":"BRN_LVL","CONTROLATTR":"","ID":"9"},"C":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"C","NAME":"BRN_TYP","CONTROLATTR":"","ID":"9"},"D":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"D","NAME":"DPT_TYP","CONTROLATTR":"","ID":"9"},"E":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"E","NAME":"UPP_BRN","CONTROLATTR":"","ID":"9"},"F":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"F","NAME":"BRN_NAM","CONTROLATTR":"","ID":"9"},"G":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"G","NAME":"STR_DTE","CONTROLATTR":"","ID":"9"},"H":{"PATTERN":"","TRANSFORM":"","SEQUENCE":"","COLUMNID":"H","NAME":"UPD_TIM","CONTROLATTR":"","ID":"9"}},"reportid":"9","reportTitle":"大数据测试xx","inputObjID":[{"ORDER":"1","OBJID":"TEXT2737013274746","CONTROL":"TEXTAREA"}],"inputCon":{"1":""}}


-----------------------------------

"cellData":{"I1":"TRL_AVG","J1":"GVR_AVG","K1":"GMR_RAT"}
-- 这样输出会有问题；

for(var x=1; x<=this.options.colCnt; x++){
	tr += this._generateTD(x, y);
}

-- [I1, J1, K1] 变成了 [A1, B1, C1]，导致了后面 fill 不了 data；

1. 不改变 colCnt，而隐藏需要隐藏的 td；
-- 这样报表的横竖显示会不会不正常？？

2. 直接一开始生的 id = xy 看起来更快捷一点；






-----------------------------------

？ params <=> defineObj

defineObj = params['metaTitle'][0].DEFINE;

defineObj.cellData = params['cellData'];

* 解决方案：
defineObj = $.extend(true, {}, JSON.parse(params['metaTitle'][0].DEFINE));





【表格控件改进】

1. 固定表头没必要；

2. 行高列宽有必要；

3. freezy 没必要；





* 传参：

-- 对比可以看出 branch 或者 region 的插件没有 val；
-- 默认要给 branch 插件一个 100 的值，而且 onClose 要赋值到 input.val 上；

-- brancher 控件没有招商银行这个选项；

？ 权限机构

if(control == 'BRANCH' || control == 'REGION'){
	attr=[];
	if (scpBrn && scpBrn.length > 0){
		for ( var j = 0; j < scpBrn.length; j++) {
			var codval = {
				code : scpBrn[j].SCP_BRN,
				value : scpBrn[j].BRN_NAM
			};
			attr.push(codval);
		}
	}				
}
var objID = generateInputControl($ele, metaInput[i].DISPLAY, control, attr);

-- scpBrn： [{"SCP_BRN":"100","BRN_NAM":"招商银行"}]



*  更改后的逻辑：

1. 进来的时候先读取传参 attr，输出默认的机构名和机构号；同时查下一级的机构；
【注】 没有保存默认的机构到 branchLinkData

if(p.params.fixData){
	$(p.input).attr('brn',p.params.fixData[0].code);
	$(p.input).val(p.params.fixData[0].value);
}
getCMBBranch();


2. bindEvent

-- nextBtn：成功查到下级机构才把当前机构保存到 branchLinkData；

$nextBtn.on('click', function() {
	var newValues = [];
	var newDisPlayValues = [];
	var callback = CMBAjax.createCallback({
		success : function(message, obj) {
			var list = obj['PamBranchChildZ1'];
			if (list && list.length > 0) {
				p.params.branchLinkData['lv' + p.params['branchLv']] = [];
				p.params.branchLinkData['lv' + p.params['branchLv']][0] = values;
				p.params.branchLinkData['lv' + p.params['branchLv']][1] = displayValues;
				
				for ( var i = 0; i < list.length; i++) {
					newValues.push(list[i].BRN_NBR);
					newDisPlayValues.push(list[i].BRN_NAM);
				}
				p.params['branchLv']++;
				p.params.cols[0].values = newValues;
				p.params.cols[0].displayValues = newDisPlayValues;
				p.close();
				p.open();
			}
		},
		fail : function(message, errMessage) {
			alert('发生错误：' + errMessage);
		},
		scope : this
	});

	var nodeID = p.cols[0].value;
	CMBAjax.remoteInvokeNew({
		prccod : 'PamBranchChild',
		webcod : '102005',
		infbdy : {
			PamBranchChildX1 : [ {
				UPP_BRN : nodeID
			} ]
		}
	}, callback, null);
});



-- prevBtn：

$prevBtn.on('click', function() {
	if (p.params['branchLv'] <= 1) {
		$(p.input).attr('brn',p.params.fixData[0].code);
		$(p.input).val(p.params.fixData[0].value);
		p.close();
		return;
	}
	p.params['branchLv']--;
	p.params.cols[0].values = p.params.branchLinkData['lv' + p.params['branchLv']][0];
	p.params.cols[0].displayValues = p.params.branchLinkData['lv' + p.params['branchLv']][1];
	delete p.params.branchLinkData['lv' + p.params['branchLv']];
	p.close();
	p.open();
});












------------------------------------------

p.open -> p.layout -> p.initPickerCol（感觉这个更像一些） -> col.updateItems -> p.updateValue

                         -> setVaule(p.setValue(p.params.value, 0);)
			    ？ p.params.cols 怎么转换成 p.params.value 了？


【p.layout】
-- p.params.cols 被转换成 p.cols
for (i = 0; i < p.params.cols.length; i++) {
	var col = p.params.cols[i];
	colsHTML += p.columnHTML(p.params.cols[i]);
	p.cols.push(col);
}


【p.updateValue】
-- 上一步产生 p.cols，这一步产生 p.value、 p.displayValue

var newValue = [];
var newDisplayValue = [];
for ( var i = 0; i < p.cols.length; i++) {
	if (!p.cols[i].divider) {
		newValue.push(p.cols[i].value);
		newDisplayValue.push(p.cols[i].displayValue);
	}
}
if (newValue.indexOf(undefined) >= 0) {
	return;
}
p.value = newValue;
p.displayValue = newDisplayValue;


if (p.input && p.input.length > 0) {
	$(p.input).val(p.params.formatValue ? p.params.formatValue(p, p.value,p.displayValue) : p.value.join(' '));
	$(p.input).attr('brn', p.cols[0].value);  // by rolin
	$(p.input).trigger('change');
}










！ lastListRowCount = list.length;
-- 怀疑是 +=
-- 不是。这个变量不是指有多少行；而是上次显示了多少行，里面的数值全部清空。

function clearContent() {
	for ( var i = 0; i < lastListRowCount; i++) {
		for (colID in metaOutputObj) {
			fillCellData($excel, colID + (i + 1 + metaRowCount), '&nbsp');
		}
	}
}



！ 分页显示不对；
-- getInputBody 要用到插件的值，还有分页的值，应该只传插件的值。


* 需要研究的错误：
-- 在 【2】 定义的变量 setParams() 不会获取；
-- setParams() 只查找与它同级的变量；

var inputCon = {};   【1】
function getInputValue() {
//	var inputCon = {};  【2】 
	for ( var i = 0; i < inputObjID.length; i++) {
		var order = inputObjID[i].ORDER;
		var val = '';
		if (inputObjID[i].CONTROL == 'BRANCH' || inputObjID[i].CONTROL == 'REGION') {
			val = $('#' + inputObjID[i].OBJID).attr('brn');
		} else {
			val = $.trim($('#' + inputObjID[i].OBJID).val());
		}
		inputCon[order] = val;
	}
	console.log('inputCon in form: ' + JSON.stringify(inputCon));
	
	setParams();
};







----------------------

5. 填充数据；

【fillCellData()】

？ 貌似 excel.js 只是画表格，没有填充表格；
-- 填充表格只是在画完表格后返回 fillCellData() 完成；

-- 所以我只要拿到数据，把填充表格的方法写在外面就好了；


$excel.excel('fillCellData',[colID + (i+1+metaRowCount), val, true]);

fillCellData(xy, data, noSetHeight)

fillCellData: $.proxy(this.fillCellData, this),

？ 怎么调用的时候变成数组了？
-- 猜测是跟 xx.apply 的用法类似；







----------------------------

展示：

1. 左右滑动翻页；

2. 显示 1-50、 51-100、 101-150... 这样的分页；




3. 列切换：横的变成竖的；

！！ 卧槽，还要考虑多行表头；

-- fillCellData 的方法要改改；
-- 可能不用改；生成 table 的时候保留 #xy 的写法；

-- excel.js 生成表头，但是内容是在 fillCellData 生成；
？ 但是第二页的表头是怎么生成？
-- 清空内容的时候没清表头；fillCellData 的时候填表头外的表格；


if(colCnt > 3){
	for(var y=1; y<=this.options.rowCnt; y++){
			var row = '<tbody>';
			for(var y=1; y<=this.options.rowCnt; y++){
				var c = this.fromColIndex(x);
				var xy = c + y;
				row += '<tr><td class="meta-title"></td><td id=' + xy + '></td></tr>';
			}
			row += '</tbody>';
			this.table.append(row);
	}
}


4. 列选择：选择自己想看的列；







--------------------

* 满屏显示：


？ 二级栏目？？
-- 肯定要用到 span 属性了；

* 分级：
-- 现在是直接输出最后一级的标题；
-- 再输出倒数第二级的标题好了；

var row = '<tbody>';
for(var x=1; x<=this.options.colCnt; x++){
	var i = this.options.theadLv - 1;
	if(this.options.cellData[xi]){    // A1:
		row += '<tr><td colspan="2">'+this.options.cellData[xi]+'</td></tr>';
	}
	
}
row += '</tbody>';
this.table.addClass('vertical-table').append(row);
...





？ 怎么拼单元格？
-- 先让最后一级字段变成完整的 title；

？ 怎么判断是最后一级的字段？
-- 直接读字段好了，反正有这个字段；

this.table.find('tbody').eq(this.options.theadLv).clone();
-- 这样没法写 td 的 id；

后面第一列的 data 应该是 this.options.cellData[x2]






看看有没有定义 colCellWidth
-- 有的哦。


{"colCnt":3,"rowCnt":51,"mode":"Design","freezeXY":"","hideXYTag":false,"colWidth":{"A":120,"B":120,"C":120},"rowHeight":{},"colDefaultWidth":120,"cellSpan":{},"cellData":{"A1":"1","B1":"2","C1":"3"},"cellExpr":{},"cellFormat":{"A0":["thead"],"A1":["thead"],"B0":["thead"],"B1":["thead"],"C0":["thead"],"C1":["thead"]},"cellDeaultFormat":[],"noSystemTool":false}




{"colCnt":8,"rowCnt":52,"mode":"ReadOnly","freezeXY":"","hideXYTag":true,"colWidth":{"A":120,"B":120,"C":120,"D":120,"E":120,"F":120,"G":120,"H":120},"rowHeight":{},"colDefaultWidth":120,"cellSpan":{"A2":["B2"],"C1":["D1"],"E1":["F1","E2","F2"]},"cellData":{"A1":"BRN_NBR","B1":"","C1":"BRN_TYP","D1":"DPT_TYP","E1":"UPP_BRN","F1":"BRN_NAM","G1":"STR_DTE","H1":"UPD_TIM","B2":"","A2":"yutuytutyuty"},"cellExpr":{},"cellFormat":{"A0":["thead"],"A1":["thead"],"A2":["thead"],"B0":["thead"],"B1":["thead"],"B2":["thead"],"C0":["thead"],"C1":["thead"],"C2":["thead"],"D0":["thead"],"D1":["thead"],"D2":["thead"],"E0":["thead"],"E1":["thead"],"E2":["thead"],"F0":["thead"],"F1":["thead"],"F2":["thead"],"G0":["thead"],"G1":["thead"],"G2":["thead"],"H0":["thead"],"H1":["thead"],"H2":["thead"]},"cellDeaultFormat":[],"noSystemTool":false}










