$.touchEvents.start 的 start，move，end 分别指代什么动作？？

eventsTarget.off($.touchEvents.start, handleTouchStart);

$.touchEvents = {
    start: $.support.touch ? 'touchstart' : 'mousedown',
    move: $.support.touch ? 'touchmove' : 'mousemove',
    end: $.support.touch ? 'touchend' : 'mouseup'
};

-- 理解成 mousedown, mousemove, mouseup 就可以了；







=======================

move 的时候干了什么事情？？

* start： 
-- 记录开始点击的坐标： touchesStart.x、 touchesStart.y

touchesStart.x = e.type === 'touchstart' ? e.originalEvent.targetTouches[0].pageX : e.pageX;
touchesStart.y = e.type === 'touchstart' ? e.originalEvent.targetTouches[0].pageY : e.pageY;




-----------------

* move：

！ container[0].scrollTop > container[0].offsetHeight 是什么情况？？
-- 字面上的理解是，拖动距离不要超出本身的高度；

-- container 跟随鼠标移动：
container.transform('translate3d(0,' + translate + 'px,0)');



** 箭头随下拉移动的几种状态：
1. 下拉一开始，就添加 pull-down；         【1】
2. 下拉距离大于某个值，就 pull-up 旋转；  【2】
3. 复位就去掉 pull-up，pull-down；        【3】


if (touchesDiff > 0 && scrollTop <= 0 || scrollTop < 0) {
    if (useTranslate) {
        e.preventDefault();
        translate = (Math.pow(touchesDiff, 0.85) + startTranslate);
        container.transform('translate3d(0,' + translate + 'px,0)');
    } else {}
    if ((useTranslate && Math.pow(touchesDiff, 0.85) > triggerDistance)) {
        refresh = true;
        container.addClass('pull-up').removeClass('pull-down');      【2】
    } else {
        refresh = false;
        container.removeClass('pull-up').addClass('pull-down');      【1】
    }
} else {
    container.removeClass('pull-up pull-down');                      【3】
    refresh = false;
    return;
}




-----------------

* end：

-- 触发定义好的 refresh 事件：

if (refresh) {
    //防止二次触发
    if(container.hasClass('refreshing')) return;
    container.addClass('refreshing');
    container.trigger('refresh');
} 


! 怎么把 container 挪回原先的位置？？
-- 通过 addClass('transitioning')
if (translate) {
    container.addClass('transitioning');
    translate = 0;
}

transform: translate3d(0, 0, 0);
&.transitioning, &.refreshing {
  transition: transform 400ms; 
}





-----------------

* 事件的触发

1. 定义 refresh 事件：

* 应该是这样被定义：

$('..pull-to-refresh-content').on('refresh', function(){
	...
}); 


-- 但是 msui 写成这样：
$(document).on('refresh', '.pull-to-refresh-content',function(e) {})




2. 触发：

* 绑定 handleTouchEnd 事件的时候 trigger refresh：
eventsTarget.on($.touchEvents.end, handleTouchEnd);

container.trigger('refresh');





-----------------

* 一开始不要获取 scrollTop, offsetHeight 这些属性；
-- 浏览器还没渲染完；







